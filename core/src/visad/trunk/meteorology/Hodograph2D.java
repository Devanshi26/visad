// Generated by Together

package visad.meteorology;

import com.sun.java.swing.JFrame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeSupport;
import java.io.Serializable;
import java.rmi.RemoteException;
import visad.DataReferenceImpl;
import visad.FlatField;
import visad.VisADException;
import visad.java2d.DisplayImplJ2D;


/**
 * A Bean that provides support for viewing a wind profile as a 2-D hodograph.
 *
 * Instances are mutable.
 *
 * @author Steven R. Emmerson
 */
public class
Hodograph2D
    implements	Serializable
{
    /**
     * The velocity profile property.
     */
    private FlatField				windProfile;

    /**
     * Supports property changes.
     */
    private final PropertyChangeSupport		changes;


    /**
     * Constructs from nothing.
     * @throws VisADException	Couldn't create necessary VisAD object.
     * @throws RemoteException	Remote access failure.
     */
    public
    Hodograph2D()
	throws VisADException, RemoteException
    {
	HodographDisplayRenderer2D	displayRenderer =
	    new HodographDisplayRenderer2D();

	DataReferenceImpl	windProfileRef =
	    new DataReferenceImpl("windProfileRef");

	changes = new PropertyChangeSupport(this);

	DisplayImplJ2D	display =
	    new DisplayImplJ2D("Wind Profile Hodograph", displayRenderer);

	{
	    JFrame	jframe = new JFrame("Wind Profile Hodograph");

	    jframe.addWindowListener(new WindowAdapter() {
		public void windowClosing(WindowEvent e) {System.exit(0);}
	    });
	    jframe.setSize(512, 512);
	    jframe.setVisible(true);

	    jframe.getContentPane().add(display.getComponent());
	}
    }


    /**
     * Sets the wind profile property from speed and direction data.
     */
    public synchronized void
    setSpdDir(FlatField spdDir)
    {
    }


    /**
     * Sets the wind profile property from U and V data.
     */
    public synchronized void
    setUV(FlatField uv)
    {
    }


    /**
     * Sets the wind profile property from a sounding.
     */
    public synchronized void
    setSounding(Sounding sounding)
    {
	windProfile = sounding.getWindProfile();
    }


    /**@shapeType DependencyLink*/
    /*#  HodographDisplayRenderer lnkUnnamed*/
}
