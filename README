
Repository Layout
=================
:core: Everything in the `visad.*` and `edu.ssec.wisc.mcidas.*` namespace.
:deps: Third party dependencies
:examples: VisAD examples with the default namespace (no java package).

::

	|-- core 
	|   |-- build
	|   |-- lib
	|   `-- src
	|       |-- edu/...
	|       `-- visad/...
	|
	|-- deps
	|   |-- build
	|   `-- src
	|       |-- HTTPClient/...
	|       |-- Jama/...
	|       |-- dods/...
	|       |-- gnu/...
	|       |-- loci/...
	|       |-- ncsa/...
	|       |-- nom/...
	|       `-- ucar/...
	|
	`-- examples
	    |-- build
	    |-- lib
	    `-- src


Building
========
There are 4 main build files (the old visad/build.xml has been removed).
The main build file `./build.xml` can be used to build the sub-projects
and create the man VisAD distribution files. Each sub-project also has 
it's own build file that can be used to perform basic build/clean/jar
operations for just that project.

You can use `ant -p` to display build script target descriptions
for each ant file for more information.

Building the Distribution
-------------------------
Check out https://svn.ssec.wisc.edu/repos/visad
Run `ant dist`

Building the Core
----------------------
You can either work from the entire SVN tree (https://svn.ssec.wisc.edu/repos/visad/trunk)
or check out only the core (https://svn.ssec.wisc.edu/repos/visad/trunk/core).

From your working copy you can simply run any of the commands listed by `ant -p`.

If you jar the core it will extract `lib/visaddeps.jar` and include the class files
in the generated visad.jar.

Building the Examples
---------------------
You can either work from the entire SVN tree (https://svn.ssec.wisc.edu/repos/visad/trunk)
or check out only the core (https://svn.ssec.wisc.edu/repos/visad/trunk/).

The examples project build file check to see if VisAD is available as either a jar file
in the exmples project lib directory or in ../core (assuming you checked out all of 
visad/trunk). If it cannot find VisAD it attempts to call ../core/build.xml to build
it before compiling the examples.  If you have VisAD in another location you can compile
the examples as follows::

    ant -Dvisad.dir=<YOUR VISAD DIR> build


VisAD and Eclipse
=================
:Eclipse: http://www.eclipse.org

First, download and install Eclipse. These instructions assume you will be using
Eclipse >= v3.2. There are multiple flavors of Eclipse that can add varying
amounts of bloat. I recommend you keep it simple and stick to "Eclipse IDE for 
Java Developers."  

:Note: These instructions were written from a Mac, so you may have to adjust 
       slightly for your platform.

Install Subclipse
-----------------
Unfortunately, at this time Eclipse does not by default come with SVN 
capabilities, so you have to install the Subclipse SVN Plugin 
(http://subclipse.tigris.org). 

	* Open Eclipse
	* Select a workspace (where all your project will be saved)
	* Start the `Install New Software` wizard. (`Help > Install New Software`)
	* Put this URL in the `Work with` box: http://subclipse.tigris.org/update_1.6.x
	  and click `Add`.
	* Give your new software update site a name and click `OK`.
	* Check all boxes in the software list and click `Next`.
	* Complete the install process by reviewing the install details, accepting
	  the license, and restarting Eclipse.
	
	* Ensure you have a valid SVN client selected
		- Open the preferences and select `Team > SVN`
		- Under `SVN Interface` select `SVNKit` and click `OK`

Create and Checkout Projects
----------------------------

	* From the menubar select `File > New > Other`
	* In the new dialog select `SVN > Check Projects from SVN` and click `Next`
	* Select `Create a new repository location` and click next.
	* Enter https://svn.ssec.wisc.edu/repos/visad as the url (http*s* not http),
	  and click `Next`
	* Select `trunk > core` and click `Finish`
	
	* (optional) Do the same for `deps` and `examples` if desired.

Building from Eclipse
---------------------

	* From the menubar select `Window > Show View > Ant`
	* In the `Ant` view tab, right-click and select `Add Buildfiles`
	* Select the build file for each sub-project created above and click `OK`
	* In the `Ant` view tab, expand a project and select the build target to run
